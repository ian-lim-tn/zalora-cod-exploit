from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0
from selenium.webdriver.support import expected_conditions as EC # available since 2.26.0
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By

driver = webdriver.Chrome()

################# CREDENTIALS #################

email = 'pepega@pepega.com'

password = '123123123'

################# END OF CREDENTIALS #################





################# SETTINGS #################
# Set implicit waits / force webdriver to wait until dom in fully loaded
driver.implicitly_wait(7)

################# SETTINGS END #################


################# FUNCTIONS ###################

success = "https://www.zalora.com.my/checkout/success/"


def get_order_id():
    get_order = driver.find_element_by_class_name('cms-text-underline')
    order_num = get_order.text
    print(order_num)
    return order_num

def order_sucess():
    if driver.current_url == success:
        print('COD order is successful')
        get_order_id()
        printf('Your order number is {order_num}')

    else:
        print("COD order was unsuccessful")





################# END FUNCTIONS ##################


# ################# REGISTRATION  #################

# # Navigate to Zalora Malaysia register page
# driver.get('https://www.zalora.com.my/customer/account/create/?from=header')

# # Register - find email address input field
# acc_email = driver.find_element_by_id('RegistrationForm_email')

# # Add text input for email address
# acc_email.send_keys(email)

# # Register - find password input field
# acc_pass = driver.find_element_by_id('RegistrationForm_password')

# # Add input for password field
# acc_pass.send_keys(password)

# # Register - find gender input field (Male)
# acc_gender = driver.find_element_by_id('RegistrationForm_gender_1')

# # select gender
# acc_gender.click()

# # select first name (name to be called)
# acc_fn = driver.find_element_by_id('RegistrationForm_first_name')

# # add input for first name
# acc_fn.send_keys('pepega')

# # select day (birthday)
# acc_b_day = Select(driver.find_element_by_id("RegistrationForm_day"))
# acc_b_day.select_by_visible_text('06')

# # select month (birthday)
# acc_month = Select(driver.find_element_by_id('RegistrationForm_month'))
# acc_month.select_by_visible_text('June')


# # select year (birthday)
# acc_year = Select(driver.find_element_by_id('RegistrationForm_year'))
# acc_year.select_by_visible_text('1966')

# # submit form / Must traverse dom from form ID
# driver.find_element_by_id('form-account-create').submit()

################## REGISTRATION END #################



################## LOGIN FOR TESTING IN SELENIUM ################## - test working

# navigate to login of zalora website
login = driver.get('https://www.zalora.com.my/customer/account/login/')

# select input section for email
login_email = driver.find_element_by_id('LoginForm_email')

# input for email address
login_email.send_keys(email)

# select password section for password
login_password = driver.find_element_by_id('LoginForm_password')

# input for password
login_password.send_keys(password)

# click login button
driver.find_element_by_id('form-account-login').submit()






################## END OF LOGIN ##################





################# MAKE PURCHASE #################

# navigate to bag section
driver.get('https://www.zalora.com.my/men/bags/?from=header')

# navigate to exact bag model
driver.get('https://www.zalora.com.my/under-armour-ua-undeniable-duffel-3-0-bag-black-1262273.html')

# find add to cart
add_to_bag = driver.find_element_by_id('AddToCart')

# click add to cart
add_to_bag.click()

# navigate to cart URL
driver.get('https://www.zalora.com.my/checkout/process/?from=header')

# navigate to payment option -- selectable element
cart_nav = driver.find_element(By.PARTIAL_LINK_TEXT, 'PAYMENT METHOD')

print(cart_nav)

# click the payment option tab
cart_nav.click()

# find on COD option <-- error here
cart_cod = driver.find_elements(By.XPATH('//*[@id="payment__tab"]/div[2]/div[2]/a'))

print(cart_cod)

# click on COD option
cart_cod.click()

# find 'Conitnue to last step' / submit button
cart_submit = driver.find_element(By.PARTIAL_LINK_TEXT, "ORDER NOW")

# click on submit button
cart_submit.click()

# # order now button
# cart_order = driver.find_element_by_class_name('btn btn--medium btn--fluid sel-checkout__order-now-button')

# # click order now button
# cart_order.click()

# print current browser url
print (driver.current_url)

# check whether successful in creating order
order_sucess()







# # assign bags var to xpath
# bags = driver.find_elements_by_xpath('//li[@class="b-catalogList__itm hasOverlay unit size1of3"]')

# # len of bags
# num_of_bags = len(bags)

# # count all bags available (according to xpath)
# for i in range(num_of_bags):
#     print("Number of bags is " + str(i))

################# END PURCHASE #################





# To-do
# 1. iterate over bags - done
# 2. randomly add 1 bag to create --> Assign all copied/scraped ahrefs to a variable and use pydash shuffle function
# 3. Go to cart
# 4. go to checkout
# 5. Input fields 
# 6. select COD and order now























#####################################################
# acc_b_day = driver.find_element_by_id('RegistrationForm_day')
# Trash 

# add input for birthday-first-day
# allOptions = acc_b_day.find_elements_by_tag_name("option")
# for option in allOptions:
#     option.get_attribute('06')
#     option.click()


# print('Selenium is opening the webpage of ' + driver.title)
#####################################################


####################### CLOSE DRIVER #######################

# driver.close()