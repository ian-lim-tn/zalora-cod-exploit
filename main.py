from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.common.exceptions import TimeoutException
from selenium.webdriver.support.ui import WebDriverWait # available since 2.4.0
from selenium.webdriver.support import expected_conditions as EC # available since 2.26.0
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.by import By
from time import sleep
import chromedriver_binary # Adds chromedriver binary to path

# Adding options to chrome driver
options = webdriver.ChromeOptions()

# Option to open Chrome webdriver in full screen
options.add_argument('--start-maximized')

# Open chrome
driver = webdriver.Chrome(chrome_options=options)

################# CREDENTIALS #################

# Change first_name string
first_name = 'testthis'

# Change last_name string
last_name = 'here'

# Insert any string
town = 'taman tak wujud'

# Insert any address
address = 'jalan tak wujud'

#  Leave Default
firstname = 'test'

# Leave Default
cellphone = '0100000000'


# Leave Default
postcode = '43200'


# Leave Default
email = f'{first_name}{last_name}@testexploit.com'

# Leave Default
password = '123123123'

print(email)

# quit()

################# END OF CREDENTIALS #################






################# SETTINGS #################
# Set implicit waits / force webdriver to wait until dom in fully loaded
driver.implicitly_wait(7)

################# SETTINGS END #################


################# FUNCTIONS ###################

# variable to store url redirect after successful COD order
success = 'https://www.zalora.com.my/checkout/success/'


#  variable to store url redirect after successful registration
register_success = 'https://www.zalora.com.my/customer/account/'

# Function to retrieve order ID
def get_order_id():
    get_order = driver.find_element_by_class_name('cms-text-underline')
    order_num = get_order.text
    print("Your order ID is " + order_num)
    return order_num

# Function to notify whether order was successful
def order_sucess():
    if driver.current_url == success:
        print('COD order is successful')
        get_order_id()
        

    else:
        print('COD order failed')


#  Function to show email and password credentials for registration
def registered():
    sleep(3)
    if driver.current_url == register_success:
        print('Account creation successful')
    else:
        print('Account creation failed')








################# END FUNCTIONS ##################


# ################# REGISTRATION  #################

def register_acc():
    # Navigate to Zalora Malaysia register page
    driver.get('https://www.zalora.com.my/customer/account/create/?from=header')

    # Register - find email address input field
    acc_email = driver.find_element_by_id('RegistrationForm_email')

    # Add text input for email address
    acc_email.send_keys(email)

    # Register - find password input field
    acc_pass = driver.find_element_by_id('RegistrationForm_password')

    # Add input for password field
    acc_pass.send_keys(password)

    # Register - find gender input field (Male)
    acc_gender = driver.find_element_by_id('RegistrationForm_gender_1')

    # select gender
    acc_gender.click()

    # select first name (name to be called)
    acc_fn = driver.find_element_by_id('RegistrationForm_first_name')

    # add input for first name
    acc_fn.send_keys(firstname)

    # select day (birthday)
    acc_b_day = Select(driver.find_element_by_id("RegistrationForm_day"))
    acc_b_day.select_by_visible_text('06')

    # select month (birthday)
    acc_month = Select(driver.find_element_by_id('RegistrationForm_month'))
    acc_month.select_by_visible_text('June')


    # select year (birthday)
    acc_year = Select(driver.find_element_by_id('RegistrationForm_year'))
    acc_year.select_by_visible_text('1966')

    # submit form / Must traverse dom from form ID
    driver.find_element_by_id('form-account-create').submit()

    registered()

################# REGISTRATION END #################


################## ADDING SHIPPING ADDRESS ##################

def shipping_add(): 

    # Navigate to shipping address URL
    driver.get('https://www.zalora.com.my/customer/account/')

    # navigate to first_name
    acc_first_name = driver.find_element_by_id('AddressForm_first_name')

    # input for first_name
    acc_first_name.send_keys(first_name)

    # navigate to last_name
    acc_last_name = driver.find_element_by_id('AddressForm_last_name')

    # input for last_name
    acc_last_name.send_keys(last_name)

    # navigate to phone number
    acc_cellphone = driver.find_element_by_id('AddressForm_phone')

    # input for phone number
    acc_cellphone.send_keys(cellphone)

    # navigate to address
    acc_address = driver.find_element_by_id('AddressForm_address1')

    # input for address
    acc_address.send_keys(address)

    # navigate to postcode
    acc_postcode = driver.find_element_by_id('AddressForm_postcode')

    # input for postcode
    acc_postcode.send_keys(postcode)

    # navigate to town
    acc_town = driver.find_element_by_id('AddressForm_city')

    # input for town
    acc_town.send_keys(town)

    # Default state is WP Putrajaya, do not require input

    sleep(3)

    # Click "Add Address"
    acc_update = driver.find_element_by_id('send').click()








################## END OF SHIPPING ADDRESS ##################



################## LOGIN FOR TESTING IN SELENIUM ################## - test working

def login():
    # navigate to login of zalora website
    login = driver.get('https://www.zalora.com.my/customer/account/login/')

    # select input section for email
    login_email = driver.find_element_by_id('LoginForm_email')

    # input for email address
    login_email.send_keys(email)

    # select password section for password
    login_password = driver.find_element_by_id('LoginForm_password')

    # input for password
    login_password.send_keys(password)

    # click login button
    driver.find_element_by_id('form-account-login').submit()






################## END OF LOGIN ##################





################# MAKE ORDER #################


def make_order():
    # navigate to bag section
    driver.get('https://www.zalora.com.my/men/bags/?from=header')

    # navigate to exact bag model
    driver.get('https://www.zalora.com.my/under-armour-ua-undeniable-duffel-3-0-bag-black-1262273.html')

    # find add to cart
    add_to_bag = driver.find_element_by_id('AddToCart')

    # click add to cart
    add_to_bag.click()

    # navigate to cart URL
    driver.get('https://www.zalora.com.my/checkout/process/?from=header')

    sleep(3)

    # navigate to payment option -- selectable element
    cart_nav = driver.find_element(By.XPATH, '//*[@id="AddressListForm"]/div[2]/button')

    print(cart_nav)

    # click the payment option tab
    cart_nav.click()

    # Insert time delay for dom to render
    sleep(3)

    # find on COD option 
    cart_cod = driver.find_element(by=By.ID, value='payment__tab')

    all_options = cart_cod.find_element_by_link_text('Cash On Delivery')

    all_options.click()

    # navigate to continue to last step
    cart_last_step = driver.find_element(By.XPATH, '//*[@id="payment__cod__form"]/div/div[2]/button')
    
    cart_last_step.click()


    # print(cart_cod)

    # click on COD option
    # cart_cod.click()

    # find 'Conitnue to last step' / submit button
    cart_submit = driver.find_element(By.CSS_SELECTOR, '#payment__cod__form .btn')

    # click on submit button
    cart_submit.click()

    # Simulate an explicit wait on python; to await dom to fully render
    sleep(3)

    # # order now button
    cart_order = driver.find_element_by_id('submit_order')

    # Simulate an explicit wait on python; to await dom to fully render
    sleep(3)

    # # click order now button
    cart_order.submit()

    # print current browser url
    print (driver.current_url)

    # check whether successful in creating order
    order_sucess()








################# END OF ORDER #################




register_acc()
shipping_add()
make_order()


driver.close()